{{ // Template for generation of c based json parsers
use model;
use filehandler;
use util;

}}{{+ jsoninc_template/utils.ct }}{{+ jsoninc_template/header.ct }}{{+ jsoninc_template/parser.ct }}{{

// 
// This generat Method is the entry point of code generation
//
pub fn generate(types:&Box<Vec<Box<model::Type>>>, folder:&str) {
  generate_buffer_code(folder.clone());
  generate_header(types, folder);
  generate_parsers(types, folder);
  let mut str:String = String::new(); }}/*
  * C code generated by staticjson
  */

#include "sj_buffer.h"
#include "jsoninc_parser.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char *argv[]) {
  printf("Hello World\n");
  char *json = "{\"customer_id\":123, \"prename\": \"Maximilian\", \"surname\":\"Mustermann\"}";
  int pos = 0;
  printf("%s\n", json);
  Customer *cust = sj_parse_customer(&pos, strlen(json), json);
}

{{   // write it to one single file 
  let filename = format!("{}/main.c", folder);
  filehandler::write_file(filename, str);
} }}
