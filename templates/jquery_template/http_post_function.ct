{{

fn get_impl_for_post_function(f:&model::Function) -> String {
  let mut str:String = String::new();
}}
        // HTTP-POST call  
        var method = "POST";
        var queryParams = "";
{{ if f.is_attribute_present("path") { }} 
        var path = self.url + " {{= f.get_attribute_value("path") }}";
{{ } else { }}
        var path = self.url;
{{ } }}

{{ for param in f.params.iter() { 
    if param.is_param_present("path-param") { }}        
	    path = path.replace("{ {{= param.get_param_value("path-param") }}}", encodeURIComponent( {{= param.name}}));
{{     }
} 
  for param in f.params.iter() {
    if param.is_param_present("query-param") { }}
            // path.addQueryParameter(" {{= param.get_param_value("query-param") }}",  {{= param.name }});
{{     }
  }  
    for param in f.params.iter() {
    if param.is_param_present("query-param") { }}
        if(queryParams.length > 0) {
            queryParams += "&";
        }                
        queryParams += " {{= param.get_param_value("query-param") }}=" + encodeURIComponent( {{= param.name }});            
{{     }
  }  }} 
        if(queryParams.length > 0) {
            path = path + "?" + queryParams;
        }        
        // DEBUG OUTPUT:
        console.log(method + " " + path);
        
        $.ajax({
            "url": path,
            "method": method,
            "contentType":'application/json; charset=UTF-8',
            {{ for param in f.params.iter() { 
                if(!(param.is_param_present("query-param") 
                     || param.is_param_present("path-param"))) {
            }} "data": JSON.stringify( {{= param.name }}) {{ str.push_str(", ");  
                }
               } }}
            "dataType": "json",
            "success": successHandler,
            "error": errorHandler
        });
{{ 
  return str;
}

}}