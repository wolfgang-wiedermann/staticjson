{{ // 
// Generate code for interface
//
fn gen_interface(ifa:&Box<model::Interface>, types:Box<Vec<Box<model::Type>>>) -> String {
  let mut str:String = String::new();
  if ifa.is_param_present("java-package") {
}}package  {{= ifa.get_param_value("java-package") }}; {{ } }}

import java.util.ArrayList; {{ if ifa.is_param_present("path") { }}
import javax.ws.rs.Path; {{ } }}
{{= get_interfaces_referenced_java_packages(&ifa, types.clone()) }}

/**
* Generated Interface for  {{= ifa.name }} with JAX-RS Annotations
*/
{{ if ifa.is_param_present("path") { }}
@Path(" {{= ifa.get_param_value("path") }}") {{ } }}
public interface  {{= ifa.name }} {
{{ for function in ifa.functions.iter() { }}

    /** 
     *  {{= function.returntype }}
     *  {{= format!("is_array = {}", function.returntype_is_array) }}
     */
    public  {{= get_java_type(&function.returntype, function.returntype_is_array) }}  {{= function.name }}();
{{ } }}
}
{{   return str;
} }}